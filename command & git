//GITPOD
Para compilar y ver el resultado en browser:
$ pip3 install flask && python3 server.py
& python -m http.server 8000

proyecto -> (add) Stage -> (commit) commit

git init / iniciar carpeta git para el proyecto
git status / para saber el status del git
git add file.txt / para aÃ±adir un archivo al stage
git add "*.txt" / in order to add all the text tiles that have been added or edited in our repository.
git commit -m "Added a new file" / guardar cambios (la -m es para dejar un mensaje)
  git reset / devuelve a la posicion anterior del commit
  git log / para ver el log de commits realizados
  git commit -a -m "Reorganized project" / incluyendo "-a" hace commit directo de todos los archivos modificados
git remote add origin https://github.com/4geeksAcademy/project.git / conectar nuestro git a un repositorio remoto
git push -u origin master / para enviar los archivos al repositorio remoto. (Master es la carpeta creada por defecto en el repositorio) (la -u se explica abajo)
  git push / para enviar todo el proyecto al repositorio remoto
git pull origin master / para recibir los archivos del reposiorio remoto. ((origin) es el remote repository and (master) the name of the local branch where that will get updated .
git fetch / traer todo el proyecto a lo bruto
git diff HEAD / obtener los cambios realizados (HEAD es el ultimo commit).
git checkout "monthly_meetings.txt" / revertir los cambios
git checkout -b develop / crear branch
git branch my_version / create new branch (copy of the project) with name my_version
git checkout my_version / cambiar de branch
git branch -d my_version / delete old branches
git merge my_version / mergear los cambios del commit
git remote -v / ver remotos creados
git remote remove origin / borrar remoto origen

Note: The git push -u command is equivalent to -set-upstream. The -u flag is used to set origin as the upstream remote in your git config. As you push a branch successfully or up to date it, it adds upstream reference.
As you push local branch with git push -u option, that local branch is linked with the remote branch automatically. The advantage is, you may use git pull without any arguments.

//CMD
CONTROL+A - Va al inicio de la linea
CONTROL+E - Va al final de la linea
CONTROL+C - Te saltas
CONTROL+L - Borra la pantalla

// Shorcuts
To cancel a command that is being executed, press Control+C
To autocomplete a file or folder name, use the tab key.
To repeat any command you have used in the past, use the up arrow and it will show you each command, one by one.
To go to the home user folder, use the ~ key like this: cd ~
Use the clear command to "clean" the current console (it is just a scroll, but a very useful one).


tar -xf nombreArchivo

Donde estamos?
pwd

Manual command
man ls 
#te muestra el manual de las instruccion

The list command
ls -l ./applications
#show the files and folder inside "appications" 
#the -l is for asking a more detailed output information on the files.
#the -p shows a "/" in the folder types.
#the -la shows hidden docs

tr #para transformar la salida

The change directory command
cd /path/to/directory

The move command
mv /path/to/file.txt /math/to/destination/file.txt

The remove command
rm file1.txt file2.txt file3.txt file4.txt
#removes all the four files 

rmdir folder
#te borra el folder con nombre folder

The rm command
The remove command
rm -r dbstore/
#delete all the files and sub-directories recursively within the "dbstore" directory.
You can use "rm ." to delete all of the files inside a directory simultaneously; use with caution.

The mkdir command
The make directory command
mkdir newdirectoryname
#create newdirectoryname in the current directory. 

mkdir path/of/new/newdirectoryname 
#create newdirectoryname inside /path/of/new/

The rmdir command
The remove directory command
rmdir mydirectory
#remove mydirectory if its in the current directory. 

rmdir path/of/targetdirectory/mydirectory
#remove mydirectory from "targetdirectory" 

The cp command
The Copy File command
cp path/to/file.ext path/to/new/file.ext
#copy file.ext and create a new file.ext with the same content.

The find command
The find command
find / -name game
#find all files containing the exact name "game" that are inside the root folder. 
find . -name *.mp3
#find all files containing the extension "mp3" within the current directory and its parent.

The nano command
nano path/to/the/textfile.txt
#open a text editor to start editing the content of textfile.txt 
#if textfile.txt does not exists it will create it!

echo hello world #print on the console
pwd #shows the current directory
echo* #shows the files on the current directory
cat *.txt #shows the content of the file you choose
cat -e #shows saltos de linea con $

Print the last 5 lines of "access.log".
tail -5 *

Create an empty file named take-the-command-challenge in the current working directory.
>take-the-command-challenge

touch test #crea un archivo #-t cambia las fechas del archivo (modficacion)

Create a directory named tmp/files in the current working directory
Hint: The directory "tmp/" doesn't exist, with one command you need to create both "tmp/" and "tmp/files"
mkdir -p tmp/files

Usar " | xargs " para pasar algo como variables.
Ejemplo: comando que queremos pasar | xargs comando al cual aplicamos la variable resultante de antes.

//Crear variables
variable=nombre-variable

