<!--Sirve para rodear los elementos mientras programamos.--!>
* {
    border: 1px dashed red;
    min-height: 10px;
}

<!--https://www.w3schools.com/cssref/css_selectors.asp
    https://code.tutsplus.com/tutorials/the-30-css-selectors-you-must-memorize--net-16048

Diferentes formas de llamar a los elementos:

    element,element	div, p          (AND)                         EJ: .class1.class2	.name1.name2 
    element element	div p           (INSIDE (descendiente))       EJ: .class1 .class2	.name1 .name2
    element>element	div > p         (PARENT)
    element+element	div + p         (FIRST)
    element1~element2	p ~ ul      (PRECEDED BY)
    
    
    --!>
    JERARQUIAS de MAS ESPECIFICO a MENOS ESPECIFICO

<!--Escribir un codigo <style> en el html es lo más específico posible pero es una práctica NO recomendada.   
    
<!--En html se utiliza el atributo id="id01". 100 puntos Ej: <h1 id="id01">--!>
#id01 {
    }

<!--En html se utiliza el atributo class="class01". 10 puntos Ej: <h1 class="class01">--!>
.class01 {
    }

<!--No hay referencia escrita en el html. 1 punto En css escribimos el tag al que queramos aplicar las propiedades. Ej: h1, h2, p, li...--!>
tag {
    }

    Podemos especificar más utilizando los atributos:
    <!--CSS Attribute Selectors--!>
    <!--No hay referencia escrita en el html.  Ej. El tag input, pero solo con tipo texto: --!>

    input[type=text] {
      width: 100%;
    }

    <!--Tambien podemos utilizar * para indicar que contenga una palabra.EJ. seleccionará divs: section01, section02, qqsection11,--!>

    div[id*='section'] {
        color: red;
    }

<!--Pseudo-class selectors--!>
a:link{color: green;}
a:visited{color: yellow;}
a:hover{color: blue;}
a:active{color: red;}


/*PAGINA CENTRADA*/ 
.center-me {
  margin: 0 auto;
  width: 200px;  /*This should be the max-widh of your website*/ 
}

